{"version":3,"sources":["pages/Game/styles.ts","components/PlayersDeck/styles.ts","components/PlayersDeck/Card.tsx","assets/imgs/rock.png","assets/imgs/paper.png","assets/imgs/scissor.png","assets/imgs/backcard.png","components/PlayersDeck/PlayersDeck.tsx","components/PlayersDeck/index.ts","components/LastRoundResult/styles.ts","components/LastRoundResult/index.ts","components/LastRoundResult/LastRoundResult.tsx","components/Score/styles.ts","components/Score/index.ts","components/Score/Score.tsx","reducers/Round.ts","models/index.ts","api/utils/store.ts","api/Games.ts","api/Round.ts","contexts/Rounds.tsx","pages/Game/index.ts","pages/Game/Game.tsx","pages/Menu/styles.ts","pages/Menu/index.ts","pages/Menu/Menu.tsx","components/RoundCollection/styles.ts","components/RoundCollection/index.ts","components/RoundCollection/RoundCollection.tsx","pages/History/styles.ts","pages/History/index.ts","pages/History/History.tsx","GlobalStyles.ts","App.tsx","index.tsx"],"names":["Container","Styled","div","Title","h1","PlayerName","h3","CardWrapper","button","props","hasAction","CardImg","img","Card","name","onClick","alt","src","PLAYER_CARDS","ImgRock","ImgPaper","ImgScissor","CPU_CARDS","ImgBackCard","PlayersDeck","onPlay","playerName","cards","map","card","i","Label","Result","p","LastRoundResult","playTop","playBottom","GameScore","h2","Score","scoreTop","scoreBottom","roundReducer","state","action","type","data","DECK","GAMES_COLLECTION","forageStore","localforage","createInstance","getGameScore","gameName","a","getGameByName","rounds","topPlayer","length","roundsWon","bottomPlayer","addRoundToGame","round","getGames","games","push","setItem","getItem","playWithCpu","curPlay","currentScore","Math","floor","random","generateRound","fetchAll","roundResult","processMove","id","Date","now","b","RoundsContext","createContext","undefined","RoundsContextProvider","children","useReducer","dispatch","useEffect","then","Provider","value","Game","useContext","dispatchRound","Button","Menu","to","RoundWrapper","Players","GlobalScore","small","RoundCollection","roundData","History","createGlobalStyle","App","GlobalStyles","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f766c8d.chunk.js","sourcesContent":["import Styled from 'styled-components';\n\nexport const Container = Styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  max-height: 100%;\n  overflow-y: auto;\n  padding: 0 1vw;\n\n  display: grid;\n  grid-gap: 3vh;\n  \n`;\n\nexport const Title = Styled.h1`\n  text-align:center;\n`;\n","import Styled from 'styled-components';\n\nexport const Container = Styled.div`\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nexport const PlayerName = Styled.h3`\n  grid-column: 1 / span 3;\n  grid-row: 1;\n  text-align: center;\n`;\n\ninterface CardWrapperProps {\n  hasAction?: boolean;\n}\nexport const CardWrapper = Styled.button<CardWrapperProps>`\n  background-color: transparent;\n  padding: 2vh 1vw;\n  border-style: solid;\n  border-width: 2px;\n  border-radius: 5px;\n  border-color: white;\n  &:hover {\n    background-color: ${(props) =>\n      props.hasAction ? '#717171' : 'transparent'};\n  }\n  \n  cursor: ${(props) => (props.hasAction ? 'pointer' : 'default')};\n`;\nexport const CardImg = Styled.img`\n  grid-column: 1;\n  grid-row: 1;\n  max-width: 16vw;\n  max-height: 16vh;\n`;\n","import React from 'react';\n\nimport { CardWrapper, CardImg } from './styles';\nimport { Card as MCard } from '../../models';\n\ninterface Props {\n  name: string;\n  img: string;\n  onClick?: (card: MCard) => void;\n}\n\nconst Card: React.FC<Props> = ({ name, img, onClick }) => {\n  return (\n    <CardWrapper\n      hasAction={!!onClick}\n      onClick={() => {\n        if (onClick) onClick(name as MCard);\n      }}\n    >\n      <CardImg alt={name} src={img} />\n    </CardWrapper>\n  );\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/rock.1f5a8a7f.png\";","export default __webpack_public_path__ + \"static/media/paper.0bb9ff03.png\";","export default __webpack_public_path__ + \"static/media/scissor.8945a561.png\";","export default __webpack_public_path__ + \"static/media/backcard.5521147d.png\";","import React from 'react';\n\nimport { Container, PlayerName } from './styles';\nimport Card from './Card';\nimport { Card as MCard } from '../../models';\n\nimport ImgRock from '../../assets/imgs/rock.png';\nimport ImgPaper from '../../assets/imgs/paper.png';\nimport ImgScissor from '../../assets/imgs/scissor.png';\nimport ImgBackCard from '../../assets/imgs/backcard.png';\n\n// TODO: PLAYER_CARD.name should only accept the allowed card names\nconst PLAYER_CARDS = [\n  { name: 'Rock', img: ImgRock },\n  { name: 'Paper', img: ImgPaper },\n  { name: 'Scissors', img: ImgScissor },\n];\nconst CPU_CARDS = [\n  { name: 'Card', img: ImgBackCard },\n  { name: 'Card', img: ImgBackCard },\n  { name: 'Card', img: ImgBackCard },\n];\n\ninterface Props {\n  playerName: string;\n  onPlay?: (card: MCard) => void;\n}\n\nconst PlayersDeck: React.FC<Props> = ({ onPlay, playerName }) => {\n  var cards = !onPlay ? CPU_CARDS : PLAYER_CARDS;\n\n  return (\n    <Container>\n      <PlayerName>{playerName}</PlayerName>\n\n      {cards.map((card, i) => (\n        <Card\n          key={`${card}-${i}`}\n          name={card.name}\n          img={card.img}\n          onClick={onPlay}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default PlayersDeck;\n","import PlayersDeck from './PlayersDeck';\n\nexport default PlayersDeck;\n","import Styled from 'styled-components';\n\nexport const Container = Styled.div`\n  display: grid;\n  grid-gap: 8px;\n`;\n\nexport const Label = Styled.h3`\n  text-align: center;\n`;\n\nexport const Result = Styled.p`\n  text-align: center;\n`;\n","import LastRoundResult from './LastRoundResult';\n\nexport default LastRoundResult;\n","import React from 'react';\n\nimport { Container, Label, Result } from './styles';\n\ninterface Props {\n  playTop: string;\n  playBottom: string;\n}\n\nconst LastRoundResult: React.FC<Props> = ({ playTop, playBottom }) => {\n  return (\n    <Container>\n      <Label>Last Result</Label>\n      <Result>{`${playTop} - ${playBottom}`}</Result>\n    </Container>\n  );\n};\n\nexport default LastRoundResult;\n","import Styled from 'styled-components';\n\nexport const Container = Styled.div`\n  display: grid;\n  grid-gap: 8px;\n`;\n\nexport const Label = Styled.h3`\n  text-align: center;\n`;\n\nexport const GameScore = Styled.h2`\n  font-weight: 700;\n  text-align: center;\n`;\n","import Score from './Score';\n\nexport default Score;\n","import React from 'react';\n\nimport { Container, Label, GameScore } from './styles';\n\ninterface Props {\n  scoreTop: number;\n  scoreBottom: number;\n}\n\nconst Score: React.FC<Props> = ({ scoreTop = 0, scoreBottom = 0 }) => {\n  return (\n    <Container>\n      <Label>Overhaul Result</Label>\n      <GameScore>{`☝ ${scoreTop}-${scoreBottom} 👇`}</GameScore>\n    </Container>\n  );\n};\n\nexport default Score;\n","import { Round } from '../models';\n\ntype Actions =\n  | {\n      type: 'PLAY_WITH_CPU';\n      data: Round;\n    }\n  | {\n      type: 'FETCH_ALL';\n      data: Round[];\n    };\n\ntype State = Round[];\n\nexport const roundReducer = (state: State, action: Actions) => {\n  switch (action.type) {\n    case 'PLAY_WITH_CPU':\n      return [...state, action.data];\n    case 'FETCH_ALL':\n      return action.data;\n  }\n};\n","//NOTE: data models are small, so all of them are grouped in this file,\n//      For larger data models, one model per file is advised\n\nexport const DECK = <const>['Rock', 'Paper', 'Scissors'];\nexport type Card = typeof DECK[number];\n\nexport interface PlayData {\n  playerName: string;\n  roundsWon: number;\n  curPlay: Card;\n}\n\nexport interface Round {\n  id: number;\n  topPlayer: PlayData;\n  bottomPlayer: PlayData;\n}\n\nexport interface Games {\n  [gameName: string]: Round[];\n}\n","import localforage from 'localforage';\n\nexport const GAMES_COLLECTION = 'GAMES';\n\nexport const forageStore = localforage.createInstance({\n  name: 'database',\n});\n","import { Round, Games } from '../models';\nimport { forageStore, GAMES_COLLECTION } from './utils/store';\n\nexport const getGameScore = async (\n  gameName: string,\n): Promise<{ topPlayer: number; bottomPlayer: number }> => {\n  const rounds = await getGameByName(gameName);\n\n  return {\n    topPlayer: rounds[rounds.length - 1]?.topPlayer?.roundsWon || 0,\n    bottomPlayer: rounds[rounds.length - 1]?.bottomPlayer?.roundsWon || 0,\n  };\n};\n\nexport const addRoundToGame = async (gameName: string, round: Round) => {\n  const games = await getGames();\n  games[gameName].push(round);\n  await forageStore.setItem(GAMES_COLLECTION, games);\n};\n\nconst getGameByName = async (gameName: string): Promise<Round[]> => {\n  var games = await getGames();\n  if (!games) {\n    await forageStore.setItem(GAMES_COLLECTION, { [gameName]: [] });\n    return [];\n  }\n  return games[gameName];\n};\n\nconst getGames = async (): Promise<Games> => {\n  return (await forageStore.getItem(GAMES_COLLECTION)) as Games;\n};\n","import { PlayData, Round, Card, DECK, Games } from '../models';\nimport { forageStore, GAMES_COLLECTION } from './utils/store';\nimport { getGameScore, addRoundToGame } from './Games';\n\nexport const playWithCpu = async (\n  gameName: string,\n  playerName: string,\n  curPlay: Card,\n): Promise<Round> => {\n  const currentScore = await getGameScore(gameName);\n\n  const topPlayer = {\n    playerName: 'CPU',\n    curPlay: DECK[Math.floor(Math.random() * DECK.length)],\n    roundsWon: currentScore.topPlayer,\n  };\n  const bottomPlayer = {\n    playerName,\n    curPlay,\n    roundsWon: currentScore.bottomPlayer,\n  };\n\n  const round = generateRound(topPlayer, bottomPlayer);\n\n  await addRoundToGame(gameName, round);\n\n  return round;\n};\n\nexport const fetchAll = async (): Promise<Round[]> => {\n  const rounds: Round[] = [];\n  const games = (await forageStore.getItem(GAMES_COLLECTION)) as Games;\n\n  for (var gameName in games) {\n    rounds.push(...games[gameName]);\n  }\n\n  return rounds;\n};\n\nconst generateRound = (topPlayer: PlayData, bottomPlayer: PlayData): Round => {\n  const roundResult = processMove(topPlayer.curPlay, bottomPlayer.curPlay);\n\n  return {\n    id: Date.now(),\n    topPlayer: {\n      ...topPlayer,\n      roundsWon: topPlayer.roundsWon + (roundResult < 0 ? 1 : 0),\n    },\n    bottomPlayer: {\n      ...bottomPlayer,\n      roundsWon: bottomPlayer.roundsWon + (roundResult > 0 ? 1 : 0),\n    },\n  };\n};\n\nconst processMove = (a: Card, b: Card): -1 | 0 | 1 => {\n  if (a === b) return 0;\n  if (a === 'Rock' && b === 'Paper') return 1;\n  if (a === 'Rock' && b === 'Scissors') return -1;\n  if (a === 'Paper' && b === 'Scissors') return 1;\n  if (a === 'Paper' && b === 'Rock') return -1;\n  if (a === 'Scissors' && b === 'Rock') return 1;\n  if (a === 'Scissors' && b === 'Paper') return -1;\n  return 0;\n};\n","import React, { createContext, useEffect, useReducer } from 'react';\n\nimport { roundReducer } from '../reducers/Round';\nimport { Round } from '../models';\nimport { fetchAll } from '../api/Round';\n\nexport const RoundsContext = createContext<[Round[], any]>([[], undefined]);\n\nexport const RoundsContextProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(roundReducer, []);\n\n  useEffect(() => {\n    fetchAll().then((rounds) => {\n      dispatch({\n        type: 'FETCH_ALL',\n        data: rounds,\n      });\n    });\n  }, []);\n\n  return (\n    <RoundsContext.Provider value={[state, dispatch]}>\n      {children}\n    </RoundsContext.Provider>\n  );\n};\n","import Game from './Game';\n\nexport default Game;\n","import React, { useContext } from 'react';\n\nimport { Container, Title } from './styles';\nimport PlayersDeck from '../../components/PlayersDeck';\nimport LastRoundResult from '../../components/LastRoundResult';\nimport Score from '../../components/Score';\nimport { Card } from '../../models';\nimport { RoundsContext } from '../../contexts/Rounds';\nimport { playWithCpu } from '../../api/Round';\n\nconst Game: React.FC = () => {\n  // TODO: context should only retrieve needed data (Only the rounds for this game)\n  const [rounds, dispatchRound] = useContext(RoundsContext);\n\n  // TODO: for multiplayer games, requests players names\n  const playerName = 'Player1';\n  const cpuName = 'CPU';\n  const gameName = `${playerName}-${cpuName}`;\n\n  const onPlay = (card: Card) => {\n    playWithCpu(gameName, playerName, card).then((round) => {\n      dispatchRound({\n        type: 'PLAY_WITH_CPU',\n        data: round,\n      });\n    });\n  };\n\n  return (\n    <Container>\n      <Title>Game</Title>\n      <PlayersDeck playerName={cpuName} />\n\n      <Score\n        scoreTop={rounds[rounds.length - 1]?.topPlayer.roundsWon || 0}\n        scoreBottom={rounds[rounds.length - 1]?.bottomPlayer.roundsWon || 0}\n      />\n      <LastRoundResult\n        playTop={rounds[rounds.length - 1]?.topPlayer.curPlay || '---'}\n        playBottom={rounds[rounds.length - 1]?.bottomPlayer.curPlay || '---'}\n      />\n\n      <PlayersDeck playerName={playerName} onPlay={onPlay} />\n    </Container>\n  );\n};\n\nexport default Game;\n","import Styled from 'styled-components';\n\nexport const Container = Styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: grid;\n  grid-gap: 2vh;\n  \n`;\n\nexport const Title = Styled.h1`\n  text-align:center;\n`;\n\nexport const Button = Styled.button`\n  background-color: #010101;\n  text-align: center;\n  text-decoration: none;\n  color: #efefef;\n  border-style: solid;\n  padding: 2vh;\n  width: 100%;\n  font-size: 1em;\n  font-weight: 700;\n  border-radius: 5px;\n  cursor: pointer;\n  &:hover {\n    background-color: #717171;\n  }\n`;\n","import Menu from './Menu';\n\nexport default Menu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Container, Title, Button } from './styles';\n\nconst Menu: React.FC = () => {\n  return (\n    <Container>\n      <Title>Menu</Title>\n      <Link to=\"/game\">\n        <Button>GAME</Button>\n      </Link>\n      <Link to=\"/history\">\n        <Button>HISTORY</Button>\n      </Link>\n    </Container>\n  );\n};\n\nexport default Menu;\n","import Styled from 'styled-components';\n\nexport const Container = Styled.div`\n  display: grid;\n  max-height: 20rem;\n  overflow: overlay;\n  border-style: solid;\n  border-width: 2px;\n  border-color: white;\n`;\n\nexport const RoundWrapper = Styled.div`\n  text-align: left;\n  border-bottom-style: solid;\n  border-bottom-color: white;\n  padding: 1rem 3rem 1rem 1rem;\n`;\n\nexport const Players = Styled.p`\n  padding:2px;\n`;\n\nexport const Result = Styled.h2`\n  padding:2px;\n`;\n\nexport const GlobalScore = Styled.small`\n  padding:2px;\n`;\n","import RoundCollection from './RoundCollection';\n\nexport default RoundCollection;\n","import React from 'react';\n\nimport { Round } from '../../models';\n\nimport {\n  Container,\n  RoundWrapper,\n  Result,\n  Players,\n  GlobalScore,\n} from './styles';\n\ninterface Props {\n  rounds?: Round[];\n}\n\nconst RoundCollection: React.FC<Props> = ({ rounds = [] }) => {\n  if (!rounds.length) return <p>No history to display</p>;\n  return (\n    <Container>\n      {rounds.map((roundData) => (\n        <RoundWrapper key={roundData.id}>\n          <Players>{`${roundData.topPlayer.playerName} - ${roundData.bottomPlayer.playerName}`}</Players>\n          <Result>{`${roundData.topPlayer.curPlay} - ${roundData.bottomPlayer.curPlay}`}</Result>\n          <GlobalScore>{`${roundData.topPlayer.roundsWon} - ${roundData.bottomPlayer.roundsWon}`}</GlobalScore>\n        </RoundWrapper>\n      ))}\n    </Container>\n  );\n};\n\nexport default RoundCollection;\n","import Styled from 'styled-components';\n\nexport const Container = Styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: grid;\n  grid-gap: 2vh;\n  \n`;\n\nexport const Title = Styled.h1`\n  text-align:center;\n`;\n","import History from './History';\n\nexport default History;\n","import React, { useContext } from 'react';\nimport RoundCollection from '../../components/RoundCollection';\n\nimport { Container, Title } from './styles';\nimport { RoundsContext } from '../../contexts/Rounds';\n\nconst History: React.FC = () => {\n  const [rounds] = useContext(RoundsContext);\n  return (\n    <Container>\n      <Title>History</Title>\n      <RoundCollection rounds={rounds} />\n    </Container>\n  );\n};\n\nexport default History;\n","// globalStyles.js\nimport { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n  }\n  body {\n    background-color: #1a1a1a;\n    font-family: Open-Sans, Helvetica, Sans-Serif;\n    color: #efefef;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Game from './pages/Game';\nimport Menu from './pages/Menu';\nimport History from './pages/History';\nimport GlobalStyles from './GlobalStyles';\nimport { RoundsContextProvider } from './contexts/Rounds';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <GlobalStyles />\n      <RoundsContextProvider>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Menu} />\n            <Route exact path=\"/game\" component={Game} />\n            <Route exact path=\"/history\" component={History} />\n          </Switch>\n        </BrowserRouter>\n      </RoundsContextProvider>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}